// Generated by gencpp from file infrastructure/Stt.msg
// DO NOT EDIT!


#ifndef INFRASTRUCTURE_MESSAGE_STT_H
#define INFRASTRUCTURE_MESSAGE_STT_H

#include <ros/service_traits.h>


#include <infrastructure/SttRequest.h>
#include <infrastructure/SttResponse.h>


namespace infrastructure
{

struct Stt
{

typedef SttRequest Request;
typedef SttResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Stt
} // namespace infrastructure


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::infrastructure::Stt > {
  static const char* value()
  {
    return "c292071d452451ec62e8cf113b51a9f0";
  }

  static const char* value(const ::infrastructure::Stt&) { return value(); }
};

template<>
struct DataType< ::infrastructure::Stt > {
  static const char* value()
  {
    return "infrastructure/Stt";
  }

  static const char* value(const ::infrastructure::Stt&) { return value(); }
};


// service_traits::MD5Sum< ::infrastructure::SttRequest> should match
// service_traits::MD5Sum< ::infrastructure::Stt >
template<>
struct MD5Sum< ::infrastructure::SttRequest>
{
  static const char* value()
  {
    return MD5Sum< ::infrastructure::Stt >::value();
  }
  static const char* value(const ::infrastructure::SttRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::infrastructure::SttRequest> should match
// service_traits::DataType< ::infrastructure::Stt >
template<>
struct DataType< ::infrastructure::SttRequest>
{
  static const char* value()
  {
    return DataType< ::infrastructure::Stt >::value();
  }
  static const char* value(const ::infrastructure::SttRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::infrastructure::SttResponse> should match
// service_traits::MD5Sum< ::infrastructure::Stt >
template<>
struct MD5Sum< ::infrastructure::SttResponse>
{
  static const char* value()
  {
    return MD5Sum< ::infrastructure::Stt >::value();
  }
  static const char* value(const ::infrastructure::SttResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::infrastructure::SttResponse> should match
// service_traits::DataType< ::infrastructure::Stt >
template<>
struct DataType< ::infrastructure::SttResponse>
{
  static const char* value()
  {
    return DataType< ::infrastructure::Stt >::value();
  }
  static const char* value(const ::infrastructure::SttResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // INFRASTRUCTURE_MESSAGE_STT_H
