// Generated by gencpp from file multi_parrot_blue/BlueParrot.msg
// DO NOT EDIT!


#ifndef MULTI_PARROT_BLUE_MESSAGE_BLUEPARROT_H
#define MULTI_PARROT_BLUE_MESSAGE_BLUEPARROT_H

#include <ros/service_traits.h>


#include <multi_parrot_blue/BlueParrotRequest.h>
#include <multi_parrot_blue/BlueParrotResponse.h>


namespace multi_parrot_blue
{

struct BlueParrot
{

typedef BlueParrotRequest Request;
typedef BlueParrotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct BlueParrot
} // namespace multi_parrot_blue


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::multi_parrot_blue::BlueParrot > {
  static const char* value()
  {
    return "e62ac06cf7c221e8f3746d0b18c22a3b";
  }

  static const char* value(const ::multi_parrot_blue::BlueParrot&) { return value(); }
};

template<>
struct DataType< ::multi_parrot_blue::BlueParrot > {
  static const char* value()
  {
    return "multi_parrot_blue/BlueParrot";
  }

  static const char* value(const ::multi_parrot_blue::BlueParrot&) { return value(); }
};


// service_traits::MD5Sum< ::multi_parrot_blue::BlueParrotRequest> should match
// service_traits::MD5Sum< ::multi_parrot_blue::BlueParrot >
template<>
struct MD5Sum< ::multi_parrot_blue::BlueParrotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::multi_parrot_blue::BlueParrot >::value();
  }
  static const char* value(const ::multi_parrot_blue::BlueParrotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::multi_parrot_blue::BlueParrotRequest> should match
// service_traits::DataType< ::multi_parrot_blue::BlueParrot >
template<>
struct DataType< ::multi_parrot_blue::BlueParrotRequest>
{
  static const char* value()
  {
    return DataType< ::multi_parrot_blue::BlueParrot >::value();
  }
  static const char* value(const ::multi_parrot_blue::BlueParrotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::multi_parrot_blue::BlueParrotResponse> should match
// service_traits::MD5Sum< ::multi_parrot_blue::BlueParrot >
template<>
struct MD5Sum< ::multi_parrot_blue::BlueParrotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::multi_parrot_blue::BlueParrot >::value();
  }
  static const char* value(const ::multi_parrot_blue::BlueParrotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::multi_parrot_blue::BlueParrotResponse> should match
// service_traits::DataType< ::multi_parrot_blue::BlueParrot >
template<>
struct DataType< ::multi_parrot_blue::BlueParrotResponse>
{
  static const char* value()
  {
    return DataType< ::multi_parrot_blue::BlueParrot >::value();
  }
  static const char* value(const ::multi_parrot_blue::BlueParrotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MULTI_PARROT_BLUE_MESSAGE_BLUEPARROT_H
